{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "accountName": {
      "type": "string",
      "metadata": {
        "Description": "Name of existing Automation Account."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "Description": "Region of Automation account."
      }
    },
    "RunbookName": {
      "type": "string",
      "defaultValue": "SyncAllARMObjectsToLogAnalytics",
      "metadata": {
        "Description": "Name of the runbook that will sync ARM objects."
      }
    },
    "StartOfSchedule": {
      "type": "string",
      "metadata": {
        "description": "Start of schedule, MUST be in the future, timezone UTC. Example format: 1/1/2019 12:00:00"
      }
    },
    "TargetLogName": {
      "type": "string",
      "metadata": {
        "description": "Name of the target logfile name in Log Analytics (case sensitive!)"
      },
      "defaultValue": "WKLog6"
    },
    "WorkSpaceName": {
      "type": "string",
      "metadata": {
        "description": "Log Analytics Workspace Name, should be in the same subscription as the Resource Group."
      },
      "defaultValue": "wk-oms2"
    },
    "SubscriptionIdList": {
      "type": "string",
      "metadata": {
        "description": "List of subscription IDs to be scanned."
      }
    },
    "TagNameList": {
      "type": "string",
      "metadata": {
        "description": "List of tags to be retrieved."
      }
    }    
  },
  "variables": {
    "AutomationApiVersion": "2015-10-31",
    "Runbook": {
      "Name": "[parameters('RunbookName')]",
      "Description": "Sync all ARM objects for a given subscription to Log Analytics.",
      "Type": "PowerShell",
      "Uri": "https://raw.githubusercontent.com/wkasdorp/OMSAllSubscriptionResources/master/Nested/SyncAllARMObjectsToLogAnalytics.ps1",
      "Parameters": {
        "LogName" : "[parameters('TargetLogName')]",
        "WorkspaceName": "[parameters('WorkSpaceName')]",
        "SubscriptionList" : "[parameters('SubscriptionIdList')]",
        "TageNameList": "[parameters('TagNameList')]"
      },
      "ParameteresUnused": {
        "UnusedsubscriptionIDList":  "[[\"4d0761b7-6383-47c3-8398-0fb138fb4b46\",\"0568048c-62e3-485e-bc1b-156f2867e43c\"]",
        "UnusedtagNameList": "[[\"owner\",\"bo-number\"]"
      }
    },
    "ScheduleLinkGUID": "[guid(uniquestring(resourceGroup().id),parameters('RunbookName'),parameters('StartOfSchedule'))]",
    "Schedule": {
      "Name": "Daily_4x",
      "Description": "Trigger four times per day",
      "IsEnabled": "true",
      "Interval": "4",
      "Frequency": "hour",
      "StartTime": "[parameters('StartOfSchedule')]",
      "TimeZone": "CET",
      "LinkGuid": "[variables('scheduleLinkGuid')]"
    }
  },
  "resources": [
    {
      "name": "[concat(parameters('accountName'), '/', variables('Runbook').Name)]",
      "type": "Microsoft.Automation/automationAccounts/runbooks",
      "apiVersion": "[variables('AutomationApiVersion')]",
      "dependsOn": [
      ],
      "location": "[parameters('location')]",
      "tags": { },
      "properties": {
        "runbookType": "[variables('Runbook').Type]",
        "logProgress": "true",
        "logVerbose": "true",
        "description": "[variables('Runbook').Description]",
        "publishContentLink": {
          "uri": "[variables('Runbook').Uri]",
          "version": "1.0.0.0"
        }
      }
    },
    {
      "name": "[concat(parameters('accountName'), '/', variables('Schedule').Name)]",
      "type": "microsoft.automation/automationAccounts/schedules",
      "apiVersion": "[variables('AutomationApiVersion')]",
      "tags": { },
      "dependsOn": [
      ],
      "properties": {
        "description": "[variables('Schedule').Description]",
        "startTime": "[variables('Schedule').StartTime]",
        "timeZone": "[variables('Schedule').TimeZone]",
        "isEnabled": "[variables('Schedule').IsEnabled]",
        "interval": "[variables('Schedule').Interval]",
        "frequency": "[variables('Schedule').Frequency]"
      }
    },
    {
      "name": "[concat(parameters('accountName'), '/', variables('Schedule').LinkGuid)]",
      "type": "microsoft.automation/automationAccounts/jobSchedules",
      "apiVersion": "[variables('AutomationApiVersion')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Automation/automationAccounts/runbooks/', parameters('accountName'), variables('Runbook').Name)]",
        "[resourceId('Microsoft.Automation/automationAccounts/schedules/', parameters('accountName'), variables('Schedule').Name)]"
      ],
      "tags": {
      },
      "properties": {
        "schedule": {
          "name": "[variables('Schedule').Name]"
        },
        "runbook": {
          "name": "[variables('Runbook').Name]"
        },
        "parameters": "[variables('Runbook').Parameters]"
      }
    }
  ],
  "outputs": { }
}
